<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY legal SYSTEM "legal.xml">
<!ENTITY version "2.26.0">
<!ENTITY date "02/10/2009">
<!ENTITY mdash "&#8212;">
<!ENTITY percnt "&#x0025;">
]>
<article id="index" lang="zh-CN">
  <articleinfo>
    <title>GNOME 显示管理器参考手册</title>

    <revhistory>
      <revision><revnumber>0.0</revnumber> <date>2008-09</date></revision>
    </revhistory>

    <abstract role="description">
      <para>GDM 是 GNOME 显示管理器，一个图形界面的登录程序。</para>
    </abstract>

    <authorgroup>
      <author><firstname>Martin</firstname><othername>K.</othername> <surname>Petersen</surname> <affiliation> <address><email>mkp@mkp.net</email></address> </affiliation></author>
      <author><firstname>George</firstname><surname>Lebl</surname> <affiliation> <address><email>jirka@5z.com</email></address> </affiliation></author>
      <author><firstname>Jon</firstname><surname>McCann</surname> <affiliation> <address><email>mccann@jhu.edu</email></address> </affiliation></author>
      <author><firstname>Ray</firstname><surname>Strode</surname> <affiliation> <address><email>rstrode@redhat.com</email></address> </affiliation></author>
      <author role="maintainer"><firstname>Brian</firstname><surname>Cameron</surname> <affiliation> <address><email>Brian.Cameron@Oracle.COM</email></address> </affiliation></author>
    </authorgroup>
    <copyright><year>1998</year> <year>1999</year> <holder>Martin K. Petersen</holder></copyright>
    <copyright><year>2001</year> <year>2003</year> <year>2004</year> <holder>George Lebl</holder></copyright>
    <copyright><year>2003</year> <year>2007</year> <year>2008</year> <holder>Red Hat, Inc.</holder></copyright>
    <copyright><year>2003</year> <year>2011</year><holder>Oracle 和/或其合作伙伴。保留所有权利。</holder></copyright>

      <legalnotice id="legalnotice">
	<para>对于本文档的复制、分发和/或修改必须遵循自由软件基金会 (Free Software Foundation) 发布的 GNU 自由文档许可证 (GFDL) 版本 1.1 或更高版本，该许可证没有固定的部分、白皮书和背页文本。您可以在 <ulink type="help" url="ghelp:fdl">link</ulink> 或在随本手册一起分发的 COPYING-DOCS 文件中找到 GFDL 的副本。</para>
         <para>本手册是在 GFDL 许可之下分发的 GNOME 手册集合的一部分。如果想要单独分发此手册，可以在手册中添加该许可证的一份副本然后分发，如该许可证的第 6 部分所述。</para>

	<para>各个公司使用的许多用于区别它们产品和服务的名称都声明为商标。在所有的 GNOME 文档以及 GNOME 文档项目的成员中，这些名称都是以全大写字母或首字母大写显示，从而表明它们是商标。</para>

	<para>本文档以及文档的修改版本都是在遵循 GNU 自由文档许可证的条款下提供，这表示具有以下含义：<placeholder-1/></para>
  </legalnotice>



    <releaseinfo>本手册讲述的是 GNOME 显示管理器 2.26.0，它最近更新于 2009年2月10日。</releaseinfo>  
  
    <othercredit class="translator">
      <personname>
        <firstname>YunQiang Su</firstname>
      </personname>
      <email>wzssyqa@gmail.com</email>
    </othercredit>
    <copyright>
      
        <year>2009</year>
      
      <holder>YunQiang Su</holder>
    </copyright>
  
    <othercredit class="translator">
      <personname>
        <firstname>TeliuTe</firstname>
      </personname>
      <email>teliute@163.com</email>
    </othercredit>
    <copyright>
      
        <year>2010</year>
      
      <holder>TeliuTe</holder>
    </copyright>
  
    <othercredit class="translator">
      <personname>
        <firstname>tuhaihe</firstname>
      </personname>
      <email>wangdianjin@linuxdeepin.com</email>
    </othercredit>
    <copyright>
      
        <year>2012</year>
      
      <holder>tuhaihe</holder>
    </copyright>
  </articleinfo>

  <!-- ============= Preface ================================== -->

  <sect1 id="preface">
    <title>本手册的约定和术语</title>

    <para>本手册讲述的是 GNOME 显示管理器 2.26.0，它最近更新于 2009年2月10日。</para>  

    <para>Chooser - 用于选择一个远程主机，在连接的显示器上管理管理远程显示的一个程序(<command>gdm-host-chooser</command>)。</para>

    <para>FreeDesktop —— 提供桌面标准的组织，例如 GDM 使用的桌面项目文件。<ulink type="http" url="http://www.freedesktop.org/"> http://www.freedesktop.org</ulink>.</para>
    <para>GDM - GNOME 显示管理器，用来描述整个软件包。</para>

    <para>Greeter - 图形登录窗口 (<command>gnome-shell</command>)。</para>

    <para>PAM - 可插入的认证机制</para>

    <para>XDMCP - X 显示管理协议</para>

    <para>Xserver - X 窗口系统的一个实现。例如  X.org 基金会提供的 Xorg Xserver <ulink type="http" url="http://www.x.org/">http://www.x.org</ulink>。</para>

    <para>以尖括号中的一个单词开始的路径是相对与安装前缀的。例如，<filename>&lt;share&gt;/pixmaps/</filename>是指<filename>/usr/share/pixmaps</filename>，如果 GDM 是使用如下命令配置的<command>--prefix=/usr</command>。</para>
  </sect1>

  <!-- ============= Overview ================================= -->

  <sect1 id="overview">
    <title>概览</title>

    <sect2 id="introduction">
      <title>介绍</title>

      <para>GNOME 显示管理器 (GDM) 是一个实现了管理本地和远程显示所要求的所有重要功能的显示管理器。GDM 是从头开始编写的，不包含任何 XDM 或 X Consortium 的代码。</para>

      <para>注意 GDM 是可以设置的，并且很多配置对安全有影响。用户需要知晓的影响，会在本文档中高亮显示。</para> 

      <para>请注意，一些操作系统设置 GDM 为不同于本文档中描述的行为。如果 GDM 并不是像叙述的样子，请查看相关的设置是否不同于此处描述的。</para>

      <para>想了解更多关于 GDM 的信息，请访问项目网站，地址是 <ulink type="http" url="http://wiki.gnome.org/Projects/GDM/"> http://wiki.gnome.org/Projects/GDM</ulink>。</para>

      <para>讨论和查询 GDM，请参考邮件列表 <address><email>gdm-list@gnome.org</email></address>。这个列表已经打包，并且是一个寻找普通问题答案的好资源。这个邮件列表打包在 <ulink type="http" url="http://mail.gnome.org/archives/gdm-list/"> http://mail.gnome.org/archives/gdm-list/</ulink>，并且有一个搜索功能以使用关键字寻找消息。</para>

      <para>请在<ulink type="http" url="http://bugzilla.gnome.org/"> http://bugzilla.gnome.org</ulink>的“gdm”分类提交任何错误报告或功能增强要求。</para>
    </sect2>

    <sect2 id="stability">
      <title>界面稳定性</title>

      <para>GDM 2.20 和更早的版本支持稳定的配置界面。但是基础代码在 GDM 2.22 重写了，其并不是完全的向后兼容旧版的。部分原因是，工作方式不同了，所以一些选项没有意义了；一部分原因是一些选项从来没有使用过；另外的一部分原因是一些功能还没有重新实现。</para>

      <para>在稳定样式中将继续支持的接口包括：Init，PreSession， PostSession， PostLogin 和 Xsession 脚本。<filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件中的一些守护进程选项继续被支持。同样，<filename>~/.dmrc</filename> 和头像登录图像位置仍然被支持。</para>

      <para>GDM 2.20 和更早的版本支持多个显卡上的多个显示器管理功能，就像使用终端服务界面，通过像是 Xnest 或 Xephyr 的程序登录一个窗口，gdmsetup 程序，基于 XML 的欢迎界面主题，以及从登录窗口运行 XDMCP chooser 的能力。2.22版重写之后，这些特性没有添加回来。</para>

    </sect2>

    <sect2 id="functionaldesc">
      <title>功能描述</title>

<!--
<para>
        TODO - Would be good to discuss D-Bus, perhaps the new GObject model,
               and to explain the reasons why the rewrite made GDM better.
               From a high-level overview perspective, rather than the
               technical aspects.
</para>
-->

      <para>GDM 负责管理系统上的显示，包括认证用户，开始用户会话，结束用户会话。GDM 是可以配置的，其配置方法在本文档的 “配置 GDM”一节说明。GDM 也适合残障人士。</para>

      <para>GDM 提供了管理主控制台显示的能力，且是通过虚拟终端显示。它是和其他程序集成的，例如快速用户切换小程序 (FUSA) 和 gnome-screensaver，以通过 Xserver 虚拟终端 (VT) 接口管理控制台上的多显示。它也可以管理 XDMCP 显示。</para>

      <para>无论怎样的显示类型，当管理显示时，GDM 将做如下的工作：启动 Xserver 进程，然后以 root 用户运行 <filename>Init</filename>，并且在显示器上启动欢迎程序。</para>

      <para>欢迎程序以无特权的“gdm”用户/用户组运行。该用户和组在此文档的“安全”一节中讲述。欢迎程序的主要功能是提供 选择登陆用户 和 用户认证时实现用户和系统之间对话 的机制。验证进程由可插入模块(PAM)来驱动。PAM 模块决定给要验证的用户显示什么提示(如果有的话)。在多数系统中，欢迎程序要求提供用户名和密码来进行验证。但一些系统可能设有指纹或智能卡阅读器等其他验证机制。GDM 可通过欢迎程序登陆扩展和<command>--enable-split-authentication</command><filename>./configure</filename> 选项配置成同时使用这些验证方法；或通过系统 PAM 配置，逐个使用这些验证方法。</para>

      <para>智能卡扩展可通过<filename>org.gnome.display-manager.extensions.smartcard.active</filename> gsettings 键开启或禁用。</para>

      <para>同样，指纹识别扩展也可通过<filename>org.gnome.display-manager.extensions.fingerprint.active</filename> gsettings 键来开启或禁用。</para>

      <para>GDM 和 PAM 可配置为不需要任何输入，这将使 GDM 自动登陆并直接启动一个会话，这在一些环境中会很有用，如单用户系统或售报亭。</para>

      <para>除了认证，欢迎程序允许用户选择启动哪个会话，使用哪个语言。会话由 .desktop 结尾的文件定义，更多关于这个文件的信息可以在本文档的“GDM 用户会话和语言配置”节找到。默认地，GDM 被配置为显示一个头像登陆器，以使用户可以通过在一张图片上点击选择他们的账户，替代输入用户名。GDM 通过用户的 <filename>~/.dmrc</filename>来跟踪用户的默认会话和语言，如果用户在登录界面没有选择会话和语言，将使用它们的默认值。</para>

      <para>当验证过一个用户，守护进程以 root 身份运行 <filename>PostLogin</filename> 脚本，然后以 root 身份运行 <filename>PreSession</filename> 脚本，在运行完这些脚本后，用户会话才被启动。当用户会话注销时，会以 root 身份运行 <filename>PreSession</filename> 脚本。这些脚本作为钩子，提供给分发者和最终用户，用来定制如何管理会话。例如，使用这些钩子您可以一个机器实时创建用户的 $HOME 文件夹，在退出时删除它。<filename>PostLogin</filename> 和 <filename>PreSession</filename> 脚本的不同点在于，<filename>PostLogin</filename> 在调用 pam_open_session 之前运行，在用户会话激活前在正确的地方完成应该做的事情。<filename>PreSession</filename> 脚本在会话激活后被调用。</para>
    </sect2>

    <sect2 id="greeterpanel">
      <title>欢迎面板</title>
      <para>GDM 欢迎程序在屏幕底部显示一个浮动面板，提供了一些额外的功能。当选择一个用户后，还可以在面板选择登录后使用的会话、语言、键盘布局等。键盘布局选择器在您输入密码时也会改变键盘布局。面板还包括一个登录服务区域以放置状态图标。比如显示当前电量的电池图标，和用于启用辅助功能的图标。欢迎程序还提供了允许用户关闭或重启系统的按钮。如有需要，也可以配置 GDM 不提供关机和重启按钮。GDM 还可通过 PolicyKit(或 Oracle Solaris 上的 RBAC)来配置，用户拥有适当的授权才允许关机或重启。</para>

      <para>注意，键盘布局功能只有在支持 libxklavier 的系统上可以使用。</para>
    </sect2>

    <sect2 id="accessibility">
      <title>辅助功能</title>

        <para>GDM 支持“无障碍登录”，允许用户登录他们的桌面，即使他们不能以普通的方式方便地使用屏幕、鼠标或键盘。无障碍技术(AT)功能，比如屏幕键盘、屏幕阅读器、屏幕放大器和 Xserver AccessX 键盘辅助都是可用的。如果需要，也可以放大文本或高对比图标和控制。参考本文档的“辅助功能配置”节获取更多关于多少中无障碍功能可以配置。</para>

        <para>在一些操作系统上，必须确保 GDM 用户是“audio”组的成员，以使要求声音输出的 AT 程序(例如文本语音转换)可以工作。</para>
    </sect2>

    <sect2 id="facebrowser">
      <title>GDM 头像登录器</title>

      <para>头像浏览器是一个允许用户通过点击一个图像以选择他用户名的界面。这项功能可以通过 /apps/gdm/simple-greeter/disable_user_list GConf 键来启用或禁用，其默认是启用的。禁用时，用户必须手动输入他们的用户名全名。启用时，它显示本地系统上所有的用来登录的用户名(在 /etc/passwd 文件中定义的有合法的 shell ，并且足够高的 UID 的所有用户)，以及最近登录过的远程用户。GDM 2.20 版和更早版中的头像登录器可能试图显示所有的远程用户，这在大的企业部署中造成了性能问题。</para>

      <para>头像登录器配置为在列表顶端显示最经常登录的用户。这可以确保经常登录的用户可以快速的找到他们的登录图片。</para>

      <para>头像登录器支持前缀字母过滤(type-ahead search)，其依据用户的输入来匹配列表中的用户名，动态移动选中的头像。这意味着，一个有很长用户名的用户在从列表中选择之前将只需要输入用户名开始的几个字符。</para>

      <para>GDM 所使用的图标可以使用 sysadmin 全局安装，也可以定位于用户主目录。如果全局安装，他们应该位于 <filename>&lt;share&gt;/pixmaps/faces/</filename> 目录，并且文件名应该就是用户的名字。头像图片应该是 GTK+ 可以读的标准图片，例如 PNG 或 JPEG。位于全局头像目录的头像图标应该使 GDM 用户可读。</para>

<!--
<para>
        TODO - In the old GDM the ~/gnome2/gdm file is used, but the new code
               seems to use ~/.gnome/gdm.  Error?
</para>
-->
      <para>如果这个用户没有全局图标，GDM 将在用户的 $HOME 目录查找图像文件。GDM 将首先在 <filename>~/.face</filename> 寻找用户的头像图片。如果没有找到，将尝试 <filename>~/.face.icon</filename>。如果仍然没有发现，它将使用在 <filename>~/.gnome2/gdm</filename> 文件中定义的“face/picture=”的值。</para>

      <para>如果一个用户没有定义的头像图片，GDM 将使用当前 GTK+ 主题的“stock_person”图标。如果没有定义这个图片，将回退使用一个通用的头像图片。</para>

      <para>请注意，加载和缩放位于远程用户主目录的头像可能会是非常消耗时间的任务。因为通过 NIS 或 NFS 加载图片是不实际的，GDM 不尝试从远程主目录加载头像图片。</para>

      <para>当这个浏览器打开时，这个计算机上的合法用户将暴露给任何人。如果启用了 XDMCP，用户名将暴露给远程用户。 这当然会对安全性有所限制，因为恶意用户不再需要猜测合法用户名。在一些非常严格的环境下，头像登录可能是不适当的。</para>

    </sect2>

    <sect2 id="xdmcp">
      <title>XDMCP</title>

<!--
<para>
        TODO - What XDMCP features actually work?   I know that the
               chooser is missing.
</para>
-->

      <para>GDM 守护进程可以被配置为监听和管理从远程显示器上的 X 显示管理协议(XDMCP)请求。XDMCP 是默认关闭的，但是如果需要可以开启。如果 GDM 构建为支持 TCP Wrapper，则守护进程将只准许在 TCP Wrappers 配置文件指定了 GDM 服务节的主机的访问。</para>

      <para>GDM 包括了一些使它可以在对 XDMCP 服务的拒绝服务攻击更有抵抗力的方法。许多协议参数，握手计时等，可以进行微调。默认设置可以在多数系统上合理的工作。</para>

      <para>GDM 默认使用普通 UDP 的用于 XDMCP 的 177 端口监听 XDMCP 请求，将通过向发端发送一个 WILLING 包响应 QUERY 或 BROADCAST_QUERY 请求。</para>

      <para>GDM 可以配置为实现 INDIRECT 查询和呈现一个主机选择器用以远程显示。GDM 会记住用户的选择并继续发送请求到选择管理器。GDM 也支持一个可以在用户连接成功后，让它忘记重定向协议的扩展。这个扩展仅在全部进程是 GDM 时才支持。它是透明的并且被 XDM 或其他实现 XDMCP 的守护进程所忽略。</para>

      <para>如果 XDMCP 好像不工作，确定所有的机器都在 <filename>/etc/hosts</filename> 指定了。</para>

      <para>参考“安全”部分来获取关于使用 XDMCP 时的安全相关的信息。</para>
    </sect2>

    <sect2 id="logging">
      <title>登录</title>

      <para>GDM 使用 syslog 记录错误和状态，它也可以记录调试信息，这在 GDM 不正常工作时追踪错误很有用。调试输出可以通过在 <filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件中设置 debug/Enable 键为“true“来启用。</para>

      <para>各个 Xservers 的输出存储于 GDM 日志目录中，一般是 <filename>&lt;var&gt;/log/gdm/</filename>。任何  Xserver 信息保存于一个相关于显示器值的文件中，<filename>&lt;display&gt;.log</filename>。</para>

      <para>会话的输出通过 GDM 守护进程以管道传送到 <filename>~/<replaceable>$XDG_CACHE_HOME</replaceable>/gdm/session.log</filename> 文件；它通常扩展到<filename>~/.cache/gdm/session.log</filename>中。这个文件每次登录时都会覆盖掉，所以通过 GDM 注销并重新登录同一个用户，将会造成前一个会话的所有消息丢失。</para>

      <para>注意，如果因为一些原因 GDM 不能创建这个文件，然后一个名为 <filename>~/<replaceable>$XDG_CACHE_HOME</replaceable>/gdm/session.log.XXXXXXXX</filename> 的回退文件将被创建，<filename>XXXXXXXX</filename> 是一些随机字符。</para>
    </sect2>

    <sect2 id="fusa">
      <title>快速用户切换</title>

      <para>GDM 允许多个用户同时登录。一个用户登录以后，另一个用户可以使用 GNOME 面板上的 用户切换器登录，或者从 GNOME 屏幕保护的锁住屏幕上的“切换用户”按钮。进行中的会话可以使用同样的机制更改回来并且继续。注意，有些发行版可能没有默认在面板上添加用户切换器。您可以使用面板右键快捷菜单添加它。</para>
      <para>注意，这个功能可以在支持虚拟终端的系统上使用。如果虚拟终端不可用，这个功能将不可用。</para>
    </sect2>
  </sect1>

  <!-- ============= Security ================================= -->

  <sect1 id="security">
    <title>安全</title>

    <sect2 id="gdmuser">
      <title>GDM 用户和组</title>

      <para>为了安全，建议用一个专用的用户和组 ID 来进行适当的操作。在大多数系统上，这个用户和组一般是“gdm”，但是可以被配置为任何一个用户或组。所有的 GDM 图形程序都以这个用户的身份运行，以使与用户交互的程序都运行在沙盒中。这个用户和组应该具有有限制的特权。</para>

      <para>“gdm”用户唯一需要的特权是读写 <filename>&lt;var&gt;/run/gdm</filename> 中的 Xauth 文件的能力。<filename>&lt;var&gt;/run/gdm</filename> 目录应该有 root:gdm 属主，以及 1777 的权限设置。</para>

      <para>在任何情况下，您都不应该把 GDM 用户/组配置给一个能轻易访问到的用户，比如 <filename>nobody</filename> 用户。一些用户获得了访问 Xauth 密钥，能窥伺或控制运行与会话相关联的 GUI 程序，或者执行在它之上的拒绝服务攻击。确保系统配置正确是非常重要的，设定只有“gdm”用户才能访问这些文件，并且登录这个账户是很不容易。例如，账户应该设定为无密码，或者不允许非 root 用户登录这个帐户。</para>

      <para>GDM 欢迎界面配置存储于 GConf 中。要允许 GDM 用户更改配置，就需要“gdm”用户有一个可写的 $HOME 目录。用户可以配置默认的 GConf 到希望的样子，以避免需要提供给“gdm”用户一个可写的 $HOME 目录。但是，如果不能写入状态信息到 GConf 配置，一些功能可能被禁用。</para>
    </sect2>

    <sect2 id="PAM">
      <title>PAM</title>

      <para>GDM 使用 PAM 作为登录认证。PAM 代表可插入的认证模块，被您计算机上大多数需要认证的程序使用。它允许管理员为不同的登录程序 (例如 ssh，登录界面，屏幕保护等) 配置特定的认证行为。</para>

      <para>PAM 是复杂和高度可配置的，本文档不打算在细节上解释这些。而是，它打算给出 PAM 配置与 GDM 的关系，GDM 是怎样配置 PAM 的，以及已知的问题的一个概述。需要操作 PAM 配置的用户需要进一步阅读 PAM 文档，以理解怎样配置 PAM 和理解在这节中使用的条目。</para>
        
      <para>PAM 配置在不同的操作系统上有不同但相似的界面，所以查看 <ulink type="help" url="man:pam.d">pam.d</ulink> 或 <ulink type="help" url="man:pam.conf">pam.conf</ulink> 手册页以获取更多细节。请确定您阅读 PAM 文档并且了解您要对您的配置做的改变对安全的影响。</para>

      <para>注意，默认地，GDM 使用“gdm”这个 PAM 服务名作默认登录用，以及使用“gdm-autologin”PAM服务名作自动登录用。这些服务可能没有在您的 pam.d 或 pam.conf 配置文件中定义。如果没有这些条目，GDM 将使用默认的 PAM 行为。在大多数系统上，这应该可以工作的很好。但是，如果 gdm-autologin 服务没有定义，自动登录功能将可能不能失效。</para>

      <para><filename>PostLogin</filename> 脚本在 pam_open_session 被调用之前运行，<filename>PreSession</filename> 在其之后。这允许系统管理员向登录程序添加任何脚本，无论在 PAM 初始化会话之前还是之后。</para>

      <para>如果您想使 GDM 使用其他的认证机制(如指纹识别或智能卡)，您应该使用希望使用的认证类型的 PAM 服务模块，而不是试图直接修改 GDM 的源代码。请阅读您系统上的 PAM 文档。怎样做到这一点经常在 <address><email>gdm-list@gnome.org</email></address> 邮件列表上讨论，所以，您可以参考这个列表的归档获取更多信息。</para>

      <para>为了能够同时使用多种认证方式，例如既可使用智能卡也可使用用户名和口令登录系统，PAM 做了一些限制。使这可以工作有一些技巧，当设置这种配置时，最好研究下这个问题一般是怎么解决的。</para>

      <para>如果自动登录在一个系统上不工作，检查在 PAM 配置文件中是否定义了“gdm-autologin”PAM 栈。为了使它工作，必须使用一个不做任何认证的 PAM 模块，或者简单的对它所有的公共界面返回 PAM_SUCCESS。假定您的系统上有个 pam_allow.so PAM 模块可以做到这一点，启用“gdm-autologin”的 PAM 配置可能会类似这样：</para>

<screen>
       gdm-autologin auth  required    pam_unix_cred.so.1
       gdm-autologin auth  sufficient  pam_allow.so.1
       gdm-autologin account  sufficient  pam_allow.so.1
       gdm-autologin session  sufficient  pam_allow.so.1
       gdm-autologin password  sufficient  pam_allow.so.1
</screen>

      <para>上边的设置将导致没有最后的日志项生成。如果想要一个最后日志项，请对这个会话使用下面的方法：</para>

<screen>
       gdm-autologin session required pam_unix_session.so.1
</screen>

      <para>如果计算机由多个人使用，这时自动登录就不合适了，您将可能希望允许一些用户不输入他们的口令就可以登录。这个功能可以作为单个用户选项，使用 gnome-system-tools 中的 users-admin 工具来启用；这由在要求口令之前检查用户是否 Unix 组“nopasswdlogin”的成员来实现。要使这可以工作，“gdm”服务的 PAM 配置文件必须包含类似于如下一行：</para>

<screen>
      gdm auth  sufficient  pam_succeed_if.so  user ingroup nopasswdlogin
</screen>

    </sect2>

    <sect2 id="utmpwtmp">
      <title>utmp 和 wtmp</title>

      <para>GDM 经会话登录和注销生成 utmp 和 wtmp 用户账户数据库条目。utmp 数据库包含用户访问和审计信息，这些可以通过例如  <command>finger</command>、 <command>last</command>、<command>login</command> 和 <command>who</command>这些命令访问。wtmp 数据库包含用户访问和伸进信息的 utmp 数据库历史。参考您系统上的 <ulink type="help" url="man:utmp">utmp</ulink> and <ulink type="help" url="man:wtmp">wtmp</ulink> 手册页以获取更多信息。</para>
    </sect2>

    <sect2 id="xauth">
      <title>Xserver 认证方案</title>

      <para>Xserver 认证文件存储于启动时 <filename>&lt;var&gt;/run/gdm</filename> 的一个新建的子目录。这些文件用于存储和在 X 客户端和 X 服务器之间共享“password”。这个“password”对于每次登录是唯一的，所以从一个会话的用户并不能窥探另一个会话上的用户。</para>

      <para>GDM 只支持 MIT-MAGIC-COOKIE-1 Xserver 认证方案。通常从其他方案获得的好处非常少，并且至今也没有为实现它们做出的努力。尤其要小心地使用 XDMCP，因为 Xserver 认证 cookie 以明文通过线路。如果可以嗅探，攻击者就可以容易的在您登录时嗅探您的认证口令，无论使用何种认证方案。如果可以嗅探且是不可取的，此时您应该使用 ssh 作为 X 连接的隧道而不是使用 XDMCP。您可以将 XDMCP 看成一种图形化的 telnet，其有同样的安全问题。多数情况下，ssh -Y 应该会优于 GDM 的 XDMCP 功能。</para>

    </sect2>

    <sect2 id="xdmcpsecurity">
      <title>XDMCP 安全</title>

      <para>即使您的显示受到 cookies 的保护，输入口令时的 XEvent 和因而的按键仍然是通过明文发送的。捕获它是很容易的。</para>

      <para>XDMCP 主要用于运行瘦客户机，比如在终端实验室。那些瘦客户机只需要到访问服务器的网络连接，这使这些瘦客户机在一个外部不能访问的分离网络中并且只能连接到服务器好像是最好的安全策略。仅有的需要从外部访问的点就是服务器。这种设置绝不应该使用一个未管理的集线器或其他可嗅探的网络。</para>

    </sect2>

    <sect2 id="xdmcpaccess">
      <title>XDMCP 访问控制</title>

      <para>XDMCP 访问控制是使用的 TCP wrappers。也可以不带 TCP wrappers 地编译 GDM，所以这个功能可能不被一些操作系统支持。</para>

      <para>您应该在文件  <filename>&lt;etc&gt;/hosts.allow</filename> 和 <filename>&lt;etc&gt;/hosts.deny</filename>中使用守护进程名字 <command>gdm</command>。例如要禁止从 <filename>.evil.domain</filename> 访问计算机，请添加</para>
<screen>
gdm: .evil.domain
</screen>
      <para>到 <filename>&lt;etc&gt;/hosts.deny</filename>。您也可能需要添加</para>
<screen>
gdm: .your.domain
</screen>
      <para>到您的 <filename>&lt;etc&gt;/hosts.allow</filename>，如果您通常禁止从所有主机的所有服务。参看 <ulink type="help" url="man:hosts.allow">hosts.allow(5)</ulink> 手册页以获取更多细节。</para>
    </sect2>

    <sect2 id="firewall">
      <title>防火墙安全</title>

      <para>即使是 GDM 尝试尽量智能地防止使攻击者 对 XDMCP 有机可乘，仍然建议您在您的防火墙上阻塞 XMDCP 端口(一般是 UDP 端口 177)，除非真的需要。GDM 防止拒绝服务攻击，但是 X 协议仍然继承了不安全，并且只应该在可控的环境中使用。同样，每个远程连接消耗许多资源，所以通过 XDMCP 进行拒绝服务攻击比攻击一个网页服务器容易的多。</para>

      <para>阻塞所有的 Xserver 端口也是明智的，它们您防火墙上的 TCP 端口 6000+ (对应每个显示号)。注意 GDM 也会使用显示号 20 和根据服务需要较大的号。</para>

      <para>X 在通过国际互联网使用时不是一个非常安全的协议，XDMCP 甚至更不安全。</para>
    </sect2>

    <sect2 id="policykit">
      <title>PolicyKit</title>

<!--
<para>
        TODO - Should we say more?
</para>
-->

      <para>GDM 可以配置为使用 PolicyKit，以允许系统管理员控制登录窗口是否应该在欢迎窗口提供关机和重启按钮。</para>

      <para>这些按钮是由 <filename>org.freedesktop.consolekit.system.stop-multiple-users</filename> 和 <filename>org.freedesktop.consolekit.system.restart-multiple-users</filename> 动作分别控制。这些动作的策略可以使用 polkit-gnome-authorization 工具或 polkit-auth 命令行程序。</para>
 
    </sect2>

    <sect2 id="rbac">
      <title>RBAC (基于角色的访问控制)</title>

      <para>GDM 可以被设置为使用 RBAC 替代 PolicyKit。这是，RBAC 的配置将被用于控制登录窗口是否在欢迎屏幕提供关机和重启键。</para>

      <para>例如，在 Oracle Solaris 上，“solaris.system.shutdown”认证被用于控制此项。简单修改 <filename>/etc/user_attr</filename> 文件即可使 “gdm”用户使用这个认证。</para>
    </sect2>

  </sect1>

  <!-- ============= ConsoleKit ================================ -->

  <sect1 id="consolekit">
    <title>ConsoleKit 的支持</title>

<!--
<para>
    TODO - Should we update these docs?  Probably should mention any 
           configuration that users may want to do for using it with GDM?
           If so, perhaps this section should be moved to a subsection of
           the "Configure" section?
</para>
-->

    <para>GDM 包含了对使用用户和会话登录框架，即所谓的 ConsoleKit，发布用户登录信息的支持。ConsoleKit 可以跟踪所有的当前登录用户。在这个角度上看，它可以替代大多数类 Unix 操作系统上都有的 utmp 和 utmpx文件。</para>

    <para>当 GDM 将为用户创建一个新的登录进程，为了为此用户打开一个新会话它将调用 ConsoleKit 的一个特权方法。同时 GDM 也提供 ConsoleKit，并附随关于用户会话的信息，例如：用户 ID，将于会话关联的 X11 显示名，会话起源的主机名(在 XDMCP 会话时有用)，此会话是否连接等。就像启用用户会话的其它程序一样，GDM 处于特别的知晓用户会话和被信任并提供他们的信息的位置。这些特权方法的使用是受到使用 D-BUS 系统信息总线安全策略的限制的。</para>

    <para>当一个通过 GDM 认证的现存会话上的用户请求回复一个存在的会话，GDM 调用 ConsoleKit 的一个特权方法来解锁那个会话。关于那个会话收到解锁信号后发生的精确的细节是未定的和与会话有关的。但是，大多数会话会解锁一个屏保作为回应。</para>

    <para>当用户选择登出，或者 GDM 或会话异常退出，用户会话将从 ConsoleKit 注销。</para>
  </sect1>

  <!-- ============= Configuration ============================= -->

  <sect1 id="configuration">
    <title>配置</title>

    <para>GDM 有一些配置界面，包括脚本集成点、守护进程配置、欢迎界面配置、通用会话配置、与 gnome-settings-daemon 配置的集成以及会话配置。这些集成的细节在下边描述。</para>

    <sect2 id="scripting">
      <title>脚本集成点</title>
      
      <para>GDM 脚本集成点可以在 <filename>&lt;etc&gt;/gdm/</filename> 目录中找到：</para>

<screen>
Xsession
Init/
PostLogin/
PreSession/
PostSession/
</screen>

      <para><filename>Init</filename>，<filename>PostLogin</filename>， <filename>PreSession</filename>和 <filename>PostSession</filename> 脚本均按如下描述的运行。</para>

      <para>对于每一种脚本，默认被执行的那个被叫做“Default”并且存储在一个与脚本类型相关的目录中。于是，默认的 <filename>Init</filename> 脚本是 <filename>&lt;etc&gt;/gdm/Init/Default</filename>。可以提供一个对每个显示的脚本，如果存在，其将替代默认脚本运行。这样的脚本保存于和默认脚本相同的目录，并且以这个显示的 Xserver DISPLAY 值为文件名。例如，如果 <filename>&lt;Init&gt;/:0</filename> 脚本存在，其将为 DISPLAY “:0”运行。</para>

     <para>所有的这些脚本都使用 root 特权运行，运行成功时返回 0，如果有任何会导致登录会话结束的失败都会返回非零值。同样注意，GDM 将一直阻塞到脚本运行完毕，所以，如果这些脚本的任何一个挂起，都会导致登录进程挂起。</para>

      <para>当这个登录界面的 Xserver 成功启动，但是在登录图形界面的实际显示之前，GDM 将运行 <filename>Init</filename> 脚本。这个脚本在登录窗口显示之前需要启动程序时很有用，或者用于做必要的特定初始化。</para>

      <para>用户成功认证之后，GDM 将运行 <filename>PostLogin</filename> 脚本，这早于任何会话设置，包括早于调用 pam_open_session。这个脚本对需要在会话运行之前对会话进行初始化有用。例如，您可以设置用户的  $HOME 目录，如果需要的话。</para>

      <para>在用户会话初始化之后，GDM 将运行 <filename>PreSession</filename>脚本。这个脚本对需要在会话初始化之后进行的初始化有用。例如，它可用于会话管理或审计。</para>

      <para>当一个用户结束他的会话，GDM 将会运行 <filename>PostSession</filename> 脚本。注意 Xserver 在脚本运行时将会停止，所以它是不可访问的。</para>

      <para>注意，<filename>PostSession</filename> 将可能甚至在显示器因为 IO 错误或相关的错误没有反应时运行。因此，不保证在脚本执行时 X 程序运行。</para>

      <para>所有的上述脚本将设置 <filename>$RUNNING_UNDER_GDM</filename> 环境变量为值 <filename>yes</filename>。如果脚本也与其他显示管理器共享，这允许您定义 GDM 何时调用这些脚本，以使您可以在使用 GDM 时运行指定代码。</para>
    </sect2>

    <sect2 id="autostart">
      <title>自启动配置</title>
      
      <para><filename>&lt;share&gt;/gdm/autostart/LoginWindow</filename> 目录包含《FreeDesktop.org 桌面程序自启动规范》中规定的格式的文件。规范中的标准特性可以被用于指定应该自动重启动或只有设置了 GConf 配置值才启动等。</para>

      <para>任何在这个目录中的 <filename>.desktop</filename> 文件将造成相关的程序在登录欢迎界面自动启动。默认情况下，GDM 跟随了自动启动 gdm-simple-greeter 登录欢迎界面本身、 gnome-power-manager 程序、gnome-settings-daemon 和 Metacity 窗口管理器的文件。欢迎程序运行需要这些程序。另外，如果设定了辅助功能配置节中指定的配置值，桌面项文件被用以启用多种辅助功能技术程序。</para>
    </sect2>

    <sect2 id="xsessionscript">
      <title>Xsession 脚本</title>

      <para>在 <filename>&lt;etc&gt;/gdm/Xsession</filename> 也有一个  <filename>Xsession</filename> 脚本，其在 <filename>PreSession</filename> 和 <filename>PostSession</filename> 之间被调用。这个脚本不像其他脚本那样支持为每个显示配置。这个脚本用于实际启动用户会话。这个脚本以用户名义运行，并且其将运行用户在桌面会话文件中选定启动的任何会话。</para>
    </sect2>

    <sect2 id="daemonconfig">
      <title>守护进程配置</title>

      <para>GDM 守护进程使用 <filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件配置。默认值存于 <filename>gdm.schemas</filename> 文件的 GConf 中。推荐最终用户修改 <filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件，因为 schemas 文件在用户升级系统以使用新版的 GDM 时可能会被覆盖。</para>

      <para>注意，旧版的 GDM 支持其他的配置选项，但是最新版的 GDM 已经不支持它们了。</para>

      <para><filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件使用 <filename>keyfile</filename> 的格式。括号中的关键词定义了节组，等号(=)之前的字符串是键，等号数的值代表他们的值。空行或以 # 开始的行被忽略。</para>

      <para><filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件支持“[daemon]”、“[security]”和“[security]”小组节。在每一个组中，都有可以被定义了用来修改 GDM 行为的特定的键/值对。例如，要允许计时登录并指定可以超时登录中，默认的用户为“you”，你可一修改这个文件，以使它包含如下行：</para>
     
<screen>
[daemon]
TimedLoginEnable=true
TimedLogin=you
</screen>

      <para>下边是支持的配置键全表：</para>

      <sect3 id="choosersection">
        <title>[chooser]</title>
        <variablelist>

          <varlistentry>
            <term>Multicast</term>
            <listitem>
              <synopsis>Multicast=false</synopsis>
              <para>如果为 true 且启用了 IPv6，chooser 将向本地网络发送一个多播请求然后收集已经加入多播组的机器的回应。</para>
            </listitem>
          </varlistentry>
         
          <varlistentry>
            <term>MulticastAddr</term>
            <listitem>
              <synopsis>MulticastAddr=ff02::1</synopsis>
              <para>这是本地连接的多播地址。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="daemonsection">
        <title>[daemon]</title>
        <variablelist>
          <varlistentry>
            <term>TimedLoginEnable</term>
            <listitem>
              <synopsis>TimedLoginEnable=false</synopsis>
              <para>如果用户使用了 <filename>TimedLogin</filename>，那么应该在一定时间的空闲之后登录(秒作单位，用<filename>TimedLoginDelay</filename>设定)。这在公共访问的终端上很有用，甚至家庭中也有用。如果用户使用键盘或者浏览菜单，时间将会重置为 <filename>TimedLoginDelay</filename> 或者是30秒，看哪一个长些。如果登录程序要求输入用户名，而用户没有输入用户名但按下了回车键，那么 GDM 将假定是想用超时缺省用户登录。注意对这个用户不会有密码提示，因此您必须要细心，尽管使用 PAM 可以配置在允许登录前需要密码。更多相关信息或者似乎这个特性没有起作用，请查阅 “Security-&gt;PAM” 一节。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>TimedLogin</term>
            <listitem>
              <synopsis>TimedLogin=</synopsis>
              <para>这是会在闲置指定的秒数之后自动登录的用户。</para>
              <para>如果值以一个竖线 | (管道符号)结尾，GDM 将激活指定的程序，并且不管程序返回什么值到标准输出上，都作为用户值。程序以 DISPLAY 环境变量的设置来运行，因而使为每个用户指定不同显示样式成为可能。例如，如果值是 “/usr/bin/getloginuser|”，那么将会运行程序 “/usr/bin/getloginuser” 来获取用户值。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>TimedLoginDelay</term>
            <listitem>
              <synopsis>TimedLoginDelay=30</synopsis>
              <para>在 <filename>TimedLogin</filename> 用户登录之前等待的秒数。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>AutomaticLoginEnable</term>
            <listitem>
              <synopsis>AutomaticLoginEnable=false</synopsis>
              <para>如果为 true，<filename>AutomaticLogin</filename>中指定的用户将会立即登录。这个特性就像使用延时为 0 秒的倒计时登录。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>AutomaticLogin</term>
            <listitem>
              <synopsis>AutomaticLogin=</synopsis>
              <para>这是如果 <filename>AutomaticLoginEnable</filename> 为 true 时，会立即登录的用户。</para>
              <para>如果值以一个竖线 | (管道符号)结尾，GDM 将激活指定的程序，并且不管程序返回什么值到标准输出上，都作为用户值。程序以 DISPLAY 环境变量的设置来运行，因而使为每个用户指定不同显示样式成为可能。例如，如果值是 “/usr/bin/getloginuser|”，那么将会运行程序 “/usr/bin/getloginuser” 来获取用户值。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>User</term>
            <listitem>
              <synopsis>User=gdm</synopsis>
              <para>用于运行欢迎程序和其他 GUI 程序的用户名。更多相关信息请参考本文档的 <filename>Group</filename> 配置键和 “Security-&gt;GDM User And Group” 一节。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Group</term>
            <listitem>
              <synopsis>Group=gdm</synopsis>
              <para>运行欢迎程序和其他 GUI 程序的组名。更多相关信息请访问本文档的 <filename>User</filename> 配置键和“Security-&gt;GDM User And Group”一节。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="debugsection">
        <title>调试选项</title>
      
        <variablelist>
          <title>[debug]</title>
          
          <varlistentry>
            <term>Enable</term>
            <listitem>
              <synopsis>Enable=false</synopsis>
              <para>要启用调试，在 <filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件里设置 debug/Enable 键为 “true”，然后重启 GDM。调试输出将发送到系统日志文件 (根据操作系统，<filename>&lt;var&gt;/log/messages</filename> 或 <filename>&lt;var&gt;/adm/messages</filename>)。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="greetersection">
        <title>欢迎程序选项</title>
      
        <variablelist>
          <title>[greeter]</title>
          
          <varlistentry>
            <term>IncludeAll</term>
            <listitem>
              <synopsis>IncludeAll=true</synopsis>
              <para>如果为 true，头像登陆器将显示本地机器上的所有用户；如果为 false，头像登录器将只显示最近登录过的用户。</para>

              <para>当这个键值为 true 时，GDM 将调用 fgetpwent() 来获取系统中的本地用户列表。所有用户 ID 小于 500(在 Oracle Solaris 上小于100)将被过滤出来。头像登陆器也将显示所有以前登录系统的用户(如 NIS/LDAP 用户)。它通过调用 <command>ck-history</command> ConsoleKit 接口来获取该列表。它也会滤除没有有效 shell 的用户(有效 shell 就是 getusershell() 返回的全部 shell - /sbin/nologin 或 /bin/false 是无效 shell，即使是 getusershell() 返回了它们)。</para>

              <para>如果值为 false，GDM 只是简单显示之前登录系统的用户(本地用户或 NIS/LDAP 用户)，通过调用 <command>ck-history</command> ConsoleKit 接口。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Include</term>
            <listitem>
              <synopsis>Include=</synopsis>
              <para>设置到一个总是包括在头像登陆器里的用户列表。这个值设置到一个用户列表中，用逗号分隔各个用户。默认这个值为空。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Exclude</term>
            <listitem>
              <synopsis>Exclude=bin,root,daemon,adm,lp,sync,shutdown,halt,mail,news,uucp,operator,nobody,nobody4,noaccess,postgres,pvm,rpm,nfsnobody,pcap</synopsis>
              <para>设置到一个总是不包括在头像登录器中的用户列表。这个值设置为一个用户列表，用逗号分隔。注意， <filename>custom.conf</filename> 的设置会覆盖默认值，因而如果您想在列表中添加额外的用户，那么您需要将额外用户值添加到默认值列表后面。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="securitysection">
        <title>安全选项</title>
      
        <variablelist>
          <title>[security]</title>
          
          <varlistentry>
            <term>DisallowTCP</term>
            <listitem>
              <synopsis>DisallowTCP=true</synopsis>
              <para>如果为 true,在启动关联的 Xservers 时将总是跟随 <filename>-nolisten tcp</filename> 到命令行，即禁用了 TCP 连接。这是一个更安全的配置，如果您不使用远程连接。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="xdmcpsection">
        <title>XDCMP 支持</title>

        <variablelist>
          <title>[xdmcp]</title>
          
          <varlistentry>
            <term>DisplaysPerHost</term>
            <listitem>
              <synopsis>DisplaysPerHost=1</synopsis>
              <para>为了防止攻击者填满等待队列，GDM 只允许一台远程计算机发起一个连接。如果希望为有多个显示器的计算机提供服务，您需要增加这个值。</para>

              <para>注意连接到本地的显示器数目允许值没有被限制。只有通过 XDMCP 的远程连接被这个配置选项限制。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Enable</term>
            <listitem>
              <synopsis>Enable=false</synopsis>
              <para>设置这项为 true，启用 XDMCP 支持，允许让 GDM 管理远程显示/X 终端。</para>
            
              <para><filename>gdm</filename> 监听 UDP 177 端口的请求。参看 Port 选项以获取更多信息。</para>
              
              <para>如果 GDM 编译为支持它，从远程显示的访问可以使用 TCP Wrappers 库控制。服务名是 <filename>gdm</filename></para>
            
              <para>您应该添加 <screen>
gdm:.my.domain
</screen> 到您的 <filename>&lt;etc&gt;/hosts.allow</filename>, 根据您的 TCP Wrappers 配置.。参看 <ulink type="help" url="man:hosts.allow">hosts.allow</ulink> 手册页，获取更多细节。</para>
              
              <para>请注意，XDMCP 不是一个相当安全的协议，使用防火墙堵住 UDP 的 177 端口是个好注意，除非您真的需要它。</para>
            </listitem>
          </varlistentry>
          
          <varlistentry>
            <term>HonorIndirect</term>
            <listitem>
              <synopsis>HonorIndirect=true</synopsis>
              <para>为不提供自己显示浏览器的 X-terminals 启用 XDMCP INDIRECT 选择(例如，远程执行 <filename>gdmchooser</filename>)。</para>
            </listitem>
          </varlistentry>
        
          <varlistentry>
            <term>MaxPending</term>
            <listitem>
              <synopsis>MaxPending=4</synopsis>
              <para>为了避免拒绝服务攻击，GDM 固定了等待连接的队列的大小。只有 MaxPending 个显示可以同时开启。</para>
            
              <para>请注意，这个参数不限制可以管理的远程显示的数目，只限制同时启动的显示连接的数目。</para>
            </listitem>
          </varlistentry>
          
          <varlistentry>
            <term>MaxSessions</term>
            <listitem>
              <synopsis>MaxSessions=16</synopsis>
              <para>定义可同时管理的远程显示连接的最大数目，也就是，您的主机上可以使用的远程显示的总数目。</para>
            </listitem>
          </varlistentry>
        
          <varlistentry>
            <term>MaxWait</term>
            <listitem>
              <synopsis>MaxWait=30</synopsis>
              <para>当 GDM 准备好管理一个显示，一个包含一个唯一的会话 ID 的 ACCEPT 包被发送给它，这个会话 ID 用于将来的 XDMCP 交谈。</para>
            
              <para>GDM 将放置会话 id 在等候队列里，等待以 MANAGE 请求显示的响应。</para>
            
              <para>如果在 MaxWait 秒内仍然没有响应，GDM 将声明显示器死机并且将其从等待队列中清除，为其他显示清理出槽。</para>
            </listitem>
          </varlistentry>
          
          <varlistentry>
            <term>MaxWaitIndirect</term>
            <listitem>
              <synopsis>MaxWaitIndirect=30</synopsis>
              <para>MaxWaitIndirect 参数确定，用户选择一个主机和接下来用户连接主机间接查询之间，检测最大秒数。当超时后，已选择的主机信息会遗忘，indirect slot 会释放给其他显示。如果有多于 <filename>MaxPendingIndirect</filename> 个的主机试图发送 indirect 请求，那么可能会较早遗忘这些信息。</para>
            </listitem>
          </varlistentry>
        
          <varlistentry>
            <term>PingIntervalSeconds</term>
            <listitem>
              <synopsis>PingIntervalSeconds=60</synopsis>
              <para>如果 Xserver 没有在指定秒数内响应，那么连接会被停止，会话中止。当出现这种情况时，从进程会以一个 ALARM 信号死亡。注意，GDM 2.20 和早期的设定为2,因而如果从 GDM 2.20 和早期版本升级到一个新版本的话，可能需要增加时间。</para>

              <para>注意，GDM 在过去使用有一个以分钟作单位的 <filename>PingInterval</filename> 配置键。对于大多数用途，您可以设置到低于一分钟，然而由于大多数情况是使用 XDMCP(例如用作终端实验室)，超过15秒的延迟就真正意味着终端关闭或重启，您将希望结束这个会话。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Port</term>
            <listitem>
              <synopsis>Port=177</synopsis>
              <para><filename>gdm</filename> 会监听 XDMCP 请求的 UDP 端口号。不要更改这项，除非你很清楚你在干什么。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Willing</term>
            <listitem>
              <synopsis>Willing=&lt;etc&gt;/gdm/Xwilling</synopsis>
              <para>当机器在一个 QUERY 后发送一个 WILLING 包返回，它发送一个字符串给出当前服务的状态。默认的信息是系统 ID，但有可能创建一个脚本显示自定义的消息。如果脚本不存在或者这个键是空的，那么发送默认的消息。如果脚本成功并产生了一些输出，输出的第一行被发送(仅第一行)。它最多每3秒运行一次，以防止服务可能被机器的 QUERY 包塞满而拒绝。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>
    </sect2>

    <sect2 id="greeterconfiguration">
        <title>简单欢迎界面配置</title>

        <para>GDM 默认的欢迎界面被叫做简单的欢迎界面，并且通过 GConf 配置。默认值使用 GConf 存储于 <filename>gdm-simple-greeter.schemas</filename> 文件。如果“gdm”用户有一个可写的 $HOME 目录来盛放 GConf 设置，这些默认值将被覆盖。这些值可以使用 <command>gconftool-2</command> 或 <command>gconf-editor</command> 程序修改。支持下列配置选项：</para>

        <variablelist>
          <title>欢迎界面配置键</title>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/banner_message_enable</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>控制浮动信息文本是否显示。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/banner_message_text</term>
            <listitem>
              <synopsis>NULL (string)</synopsis>
              <para>指定在欢迎窗口显示浮动文本消息。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/disable_restart_buttons</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>控制是否在登录窗口显示重启按钮。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/disable_user_list</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>如果为 true，不在登录窗口显示已知用户的头像登录功能。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/logo_icon_name</term>
            <listitem>
              <synopsis>computer (string)</synopsis>
              <para>设置为要使用的主题图标名，以获取欢迎标志。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/recent-languages</term>
            <listitem>
              <synopsis>[] (string list)</synopsis>
              <para>设定语言列表，以便在登录窗口显示默认语言。默认值是“[]”，用默认的设定仅显示系统语言，选项“其他...”弹出一个对话框，显示用户可选择的所有可用的语言列表。</para>

              <para>不希望用户手动更改这项设置，而是，GDM 跟踪在配置键中选中的任何语言，并且在语言组合框中与“其他...”一起单独显示他们。这种方式，使常用的语言可以容易的选择。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/recent-layouts</term>
            <listitem>
              <synopsis>[] (string list)</synopsis>
              <para>设置在默认的登录面板上显示的键盘布局的列表。默认值是“[]”。使用默认的配置时，只显示默认的键盘布局，其他的选项在“其他...”中，其弹出一个对话框，显示所有可用的键盘布局，以供用户选择。</para>

              <para>不希望用户手动更改这项设置，而是，GDM 跟踪在配置键中选中的任何语言布局，并且在键盘布局组合框中与“其他...”一起单独显示他们。这种方式，使常用的键盘布局可以容易的选择。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>/apps/gdm/simple-greeter/wm_use_compiz</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>控制是否使用 compiz 替换 metacity 作为窗口管理器。</para>
            </listitem>
          </varlistentry>
        </variablelist>
    </sect2>

    <sect2 id="accessibilityconfiguration">
     <title>辅助功能设置</title>

      <para>本节描述 GDM 可用的辅助功能配置选项。</para>

      <sect3 id="accessibilitydialog">
        <title>GDM 辅助功能对话框和 Gconf 键</title>

        <para>登录界面的 GDM 欢迎面板显示一个辅助功能图标。点击这个图标，打开 GDM 辅助功能对话框。在 GDM 辅助功能对话框中，有一列复选框，用户可以启用或禁用相关的辅助选项。</para>

        <para>复选框对应屏幕键盘、屏幕放大镜和屏幕阅读器辅助工具作用于三个 GConf 键，这在本文档的下一节中讲述。通过启用或禁用这些复选框，相关联的 GConf 键设置为“true”或“false”。当 GConf 键设为 true，辅助工具关联这些 GConf 键启动，当 GConf 键设为 false，辅助工具关联这些 GConf 键禁用。这些 GConf 键在用户登录后，不会自动重置为默认状态。所以，上次 GDM 登录的会话中的辅助工具，在下次登录会话时会自动运行启动。</para>

        <para>GDM 辅助功能对话框中的其他的复选框没有对应的 GConf 键，因为没有启动额外的程序来提供这些辅助功能特性。其他选项对应 Xserver 对应的辅助功能特性，其在 GDM 会话中一直运行。</para>
      </sect3>

      <sect3 id="accessibilitygconfconfiguration">
        <title>辅助功能 GConf 键</title>

        <para>GDM 提供如下的 GConf 键来控制它的辅助功能：</para>

        <variablelist>
          <title>GDM 配置键</title>

          <varlistentry>
            <term>/desktop/gnome/interface/accessibility</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>控制辅助功能设施是否由 GDM 图形界面启动。这被许多辅助功能程序的工作所需要。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/desktop/gnome/applications/at/screen_magnifier_enabled</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>如果设置了，链接到 GConf 键的辅助工具将随着 GDM 图形界面程序启动。默认这是一个屏幕放大镜程序。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/desktop/gnome/applications/at/screen_keyboard_enabled</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>如果设置了，链接到 GConf 键的辅助工具将随着 GDM 图形界面程序启动。默认这是一个屏幕键盘程序。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/desktop/gnome/applications/at/screen_reader_enabled</term>
            <listitem>
              <synopsis>false (boolean)</synopsis>
              <para>如果设置了，链接到 GConf 键的辅助工具将随着 GDM 图形界面程序启动。默认这是一个屏幕阅读程序。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="accessibilitytoolsconfiguration">
        <title lang="en">Linking GConf Keys to Accessibility Tools</title>

        <para>对于 screen_magnifier_enabled, screen_keyboard_enabled 和 screen_reader_enabled GConf 键，要启动的辅助工具依赖于位于 GDM 自启动文件夹的桌面项文件，将在本手册的“自启动配置”一节中讲述。在 GDM 自启动文件夹中的任何桌面项文件，都能够通过 AutostartCondition 指定 GConf 键来链接到它们。桌面项文件中的 AutostartCondition 精确行应该是下列之一：</para>

<screen>
AutostartCondition=GNOME /desktop/gnome/applications/at/screen_keyboard_enabled
AutostartCondition=GNOME /desktop/gnome/applications/at/screen_magnifier_enabled
AutostartCondition=GNOME /desktop/gnome/applications/at/screen_reader_enabled
</screen>

        <para>当一个辅助功能键是 true，那么所有在 GDM 自启动桌面项文件中，关联到这个键的程序都会启动(除非在那个桌面项文件中 Hidden key 也设为 true)。单一的 GConf 键甚至可以启动多个辅助工具，如果有多个 GDM 自启动文件夹里的桌面项文件用这个AutostartCondition。</para>
      </sect3>

      <sect3 id="accessibilitytoolexample">
        <title>修改辅助工具配置的例子</title>

        <para>例如，如果 GOK 与 GNOME 一起分发，并作为默认的屏幕键盘，那么这可能被一个不同的程序所替换，如果想要这么做的话。要用键盘程序“onboard”替换 GOK，并且额外还激活辅助工具“mousetweaks”支持悬停点击，那么就需要下面的配置项。</para>

        <para>为 onboard 创建一个桌面项文件，再为 mousetweaks 创建另一个，例如 onboard.desktop 和 mousetweaks.desktop。这些文件必须放在 GDM 自启动文件夹，格式要求在本文档的“自启动配置”一节里解释。</para>

        <para>下边是作为例子的 <filename>onboard.desktop</filename> 文件：</para>

<screen>
[Desktop Entry]
Encoding=UTF-8
Name=Onboard 屏幕键盘
Comment=使用屏幕键盘
TryExec=onboard
Exec=onboard --size 500x180 -x 20 -y 10
Terminal=false
Type=Application
StartupNotify=true
Categories=GNOME;GTK;Accessibility;
AutostartCondition=GNOME /desktop/gnome/applications/at/screen_keyboard_enabled
</screen>

        <para>下边是一个作为例子的 <filename>mousetweaks.desktop</filename> 文件：</para>

<screen>
[Desktop Entry]
Encoding=UTF-8
Name=模拟鼠标点击
Comment=通过悬停指针来执行鼠标点击
TryExec=mousetweaks
Exec=mousetweaks --enable-dwell -m window -c -x 20 -y 240 
Terminal=false
Type=Application
StartupNotify=true
Categories=GNOME;GTK;Accessibility;
AutostartCondition=GNOME /desktop/gnome/applications/at/screen_keyboard_enabled
</screen>

        <para>注意 AutostartCondition 一行，是为屏幕键盘将全部桌面项文件链接到 GConf 键。</para>

        <para>要在启动时禁用 GOK，用于 GOK 屏幕键盘的桌面项文件必须删除或禁用。否则 onboard 和 GOK 将同时启动。这可以通过删除 GDM 自启动文件夹中的 gok.desktop 文件，或者在 gok.desktop 文件中添加“Hidden=true”。</para>

        <para>经过这些改变，当用户在 GDM 会话中激活屏幕键盘时，GOK 将不再会运行，而 onboard 和 mousetweaks 会取代它启动。</para>
      </sect3>
    </sect2>

    <sect2 id="generalsessionconfig">
      <title>通用会话设置</title>
<!--
<para>
          TODO - I think this section should be expanded upon.  What specific
                 keys are of interest, or would some users be likely to want
                 to configure?  Also, would be good to be more specific about
                 how lock down management is handled.
</para>
-->
        <para>GDM 欢迎程序使用一些与您桌面会话中相同的框架程序，因而，一些 GConf 设置会相互影响，对于这些设置，欢迎程序会使用默认值，除非它被：1) GDM 的安装强制策略覆盖，2) 系统强制策略覆盖。GDM 安装时用它自己的强制策略为了安全锁定了一些设置。</para>
    </sect2>

    <sect2 id="gnomesettingsdaemon">
      <title>GNOME 设置守护进程</title>
<!--
<para>
          TODO - I think this section should be expanded upon.  What specific
                 keys are of interest, or would some users be likely to want
                 to configure?  Also, would be good to give a more complete
                 list of plugins that users might want to consider disabling.
                 Also, shouldn't we list the sound/active key in the Greeter
                 configuration setting?  Oddly I do not find this key used
                 in anything but the chooser in SVN.
</para>
-->

        <para>GDM 启用了 gnome-settings-daemon 的下列插件：a11y-keyboard, background, sound, xsettings。</para>

        <para>他们负责例如背景图片，字体和主题设置，声音事件等。</para>

        <para>也可以使用 GConf 禁用插件。例如，如果您想禁用声音插件，就可以不设置下边这个键：<filename>/apps/gdm/simple-greeter/settings-manager-plugins/sound/active</filename>。</para>
    </sect2>

    <sect2 id="sessionconfig">
      <title>GDM 会话配置</title>

      <para>GDM 会话指定使用 FreeDesktop.org Desktop Entry Specification，可以在这找到参考：<ulink url="http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec"> http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec</ulink>。</para>

      <para>默认情况，GDM 将桌面项文件安装在 <filename>&lt;share&gt;/xsessions</filename> 文件夹。GDM 在下列文件夹中搜索桌面项文件： <filename>&lt;etc&gt;/X11/sessions/</filename>、<filename>&lt;dmconfdir&gt;/Sessions</filename>、<filename>&lt;share&gt;/xsessions</filename> 和 <filename>&lt;share&gt;/gdm/BuiltInSessions</filename>。默认情况 <filename>&lt;dmconfdir&gt;</filename> 设置为 <filename>&lt;etc&gt;/dm/</filename>，除非 GDM 通过 “--with-dmconfdir” 选项配置了其他文件夹。</para>

      <para>可以通过编辑桌面项文件并添加一行 <filename>Hidden=true</filename> 来禁用一个会话。</para>

      <para>GDM 桌面项文件支持 GDM-specific 扩展，一个叫“X-GDM-BypassXsession”的键，如果这它没有在桌面项文件中指定，默认值是“false”。如果这个键指定为“true”，那么在启动用户会话时，GDM 将直接启动桌面项文件中的“Exec”键指定的程序。将不通过 <filename>&lt;etc&gt;/gdm/Xsession</filename> 脚本来运行这个程序，这是通常的操作。因为忽略 <filename>&lt;etc&gt;/gdm/Xsession</filename> 脚本避免以通常系统和用户设置来启动用户会话，所以用这种方式对于调试系统，以及可能阻止用户正常启动的错误脚本很有用处。</para>

    </sect2>

    <sect2 id="userconfig">
      <title>GDM 用户会话和语言配置</title>
      <para>用户选择的默认会话和语言保存在 <filename>~/.dmrc</filename> 文件里，当用户首次登录系统，这个文件由用户初始的选择来创建。用户可以在登录时方便地改变这些默认值。GDM 会记住这些改变在下次登录时使用。</para>

      <para><filename>~/.dmrc</filename> 文件是标准的 <filename>INI</filename> 格式，它有一小节叫 <filename>[Desktop]</filename>，里面有两个键：<filename>Session</filename> 和 <filename>Language</filename>。</para>

      <para><filename>Session</filename> 键指定 <filename>.desktop</filename> 会话的基本名，用户通常使用的会话不带 <filename>.desktop</filename> 扩展名。<filename>Language</filename> 键指定用户默认使用的语言。如果这些键都没有，则使用系统默认值，这个文件通常看起来如下所示：</para>

<screen>
[Desktop]
Session=gnome
Language=cs_CZ.UTF-8
</screen>
    </sect2>

  </sect1>

  <!-- ============= GDM Commands ============================= -->

  <sect1 id="binaries">
    <title>GDM 命令</title>

    <sect2 id="sbindir_binaries">
      <title>GDM Root 用户命令</title>

      <para>GDM 包在<filename>sbindir</filename>中提供了下列供 root 用户使用的命令：</para>

      <sect3 id="gdmcommandline">
        <title><command>gdm</command> 命令行选项</title>

        <para lang="en">
          <command>gdm</command> is the main daemon which sets up
          graphical login environment and starts necessary helpers.
       </para>

        <variablelist>
          <title><command>gdm</command> 命令行选项</title>

          <varlistentry>
            <term>-?, --help</term>
            <listitem>
              <para>给出命令行选项的一个简单概述。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>--fatal-warnings</term>
            <listitem>
              <para>使所有的警告都可以造成 GDM 退出。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>--timed-exit</term>
            <listitem>
              <para>30秒之后退出，对调试有用。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>--version</term>
            <listitem>
              <para>显示 GDM 守护进程的版本。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <sect3 id="gdmrestartcommandline">
        <title><command>gdm-restart</command> 命令行选项</title>

        <para><command>gdm-restart</command> 通过给 GDM 守护进程一个 HUP 信号停止并重启 GDM。这个命令将立即结束会话并且注销当前使用 GDM 登录的用户。</para>
      </sect3>

      <sect3 id="gdmsaferestartcommandline">
        <title><command>gdm-safe-restart</command> 命令行选项</title>
  
        <para><command>gdm-safe-restart</command> 通过给 GDM 守护进程一个 USR1 信号停止并重启 GDM。GDM 将在所有用户注销之后重启。</para>
      </sect3>

      <sect3 id="gdmstopcommandline">
        <title><command>gdm-stop</command> 命令行选项</title>

        <para><command>gdm-stop</command> 通过给 GDM 守护进程一个 TERM 信号停止 GDM。</para>
      </sect3>
    </sect2>
  </sect1>

  <!-- ============= Troubleshooting =========================== -->

  <sect1 id="troubleshooting">
    <title>疑难解答</title>
<!--
<para>
      TODO - any other tips we should add?  Might be useful to highlight any
             common D-Bus configuration issues?
</para>
-->

    <para>这一节讨论对了解 GDM 工作有用的小提示。通常，如果您使用 GDM 出现问题，您可以提交一个错误报告，或者发送邮件到 gdm-list 邮件列表，相关信息可以参阅一下本文档介绍一节内容。</para>

    <para>如果 GDM 没有正确地运行，显示调试信息总是一个不错的主意。要启用调试，在 <filename>&lt;etc&gt;/gdm/custom.conf</filename> 文件中设置 debug/Enable 键为“true”，然后重启 GDM。再到 GDM 出现错误的地方，调试输出将发送到系统日志文件(<filename>&lt;var&gt;/log/messages</filename> 或 <filename>&lt;var&gt;/adm/messages</filename>，是哪一个取决于操作系统)。如果您要将此输出通过错误报告或邮件在 GDM 社区里共享，请只包含 GDM 反馈的调试信息，而不要整个文件，因为它可能非常大。如果您没有看到任何 GDM 系统日志输出，您可能需要配置系统日志(请访问 <ulink type="help" url="man:syslog">syslog</ulink> 帮助页)。</para>

    <sect2 id="wontstart">
      <title>GDM 不启动</title>

      <para>有许多问题可能会导致 GDM 启动失败，这一节讨论一些普通问题，以及如何在 GDM 启动中跟踪一个错误。一些问题将会使 GDM 返回一个错误消息或对话框，当它试图启动的时候，但若是 GDM 没有提示就失败了，那么跟踪错误就比较困难。</para>

      <para>首先确保 Xserver 配置正确，GDM 配置文件在 [server-Standard] 小节里包含一个启动 Xserver 的命令。验证这个命令可以在您系统上工作，从控制台里运行这个命令应该可以启动 Xserver，如果启动失败，那么问题可能出在您的 Xserver 配置文件。访问 Xserver 的错误日志，寻找这个错误出现的可能原因。错误也可能是您的 Xserver 需要其他的命令行选项。如果是这样，那么就在 GDM 配置文件中设置 Xserver 命令，以便它正确运行在您的系统上。</para>

      <para>还要确保 <filename>/tmp</filename> 文件夹有恰当的所属和权限，系统中有足够的可用空间，这些问题也可以导致 GDM 启动失败。</para>
    </sect2>
  </sect1>

  <!-- ============= Application License ============================= -->

  <sect1 id="license">
    <title>许可证</title>
    <para>本程序是自由软件；您可以在自由软件基金会发布的 <ulink type="help" url="gnome-help:gpl"><citetitle>GNU 通用公共许可证</citetitle></ulink>的约束下重新发布或修改它；许可证应使用第二版本或您所选择的更新的版本。</para>
    <para>本程序的发布是希望它能够对你有所帮助，但是没有任何保证；包括商业适用性的默示担保以及特定目的适用性。查阅<citetitle> GNU 通用公共许可证</citetitle>以了解更多内容。</para>
    <para><citetitle>GNU 通用公共许可证</citetitle> 作为附录包含在了 <citetitle>GNOME 用户指南</citetitle>中。您也可以通过访问 <ulink type="http" url="http://www.fsf.org">他们的网站</ulink>或写信给<address> Free Software Foundation, Inc. <street>51 Franklin Street, Fifth Floor</street><city>Boston</city>, <state>MA</state><postcode>02110-1301</postcode><country>USA</country></address>来获取一份<citetitle>GNU 通用公共许可证</citetitle>。</para>
  </sect1>
</article>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
